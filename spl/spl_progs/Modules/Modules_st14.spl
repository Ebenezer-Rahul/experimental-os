//library code
loadi(63,13);
loadi(64,14);

//init
loadi(65,7);
loadi(66,8);

//int_7
loadi(16,29);
loadi(17,30);

//timer interupt
loadi(4,17);
loadi(5,18);

//int 10
loadi(22,35);
loadi(23,36);

//execption_handler
loadi(2,15);
loadi(3,16);

//scheduler Module
loadi(50,63);
loadi(51,64);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;


//library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//heaps
[PTBR + 4] = 78;
[PTBR + 5] = "0110";
[PTBR + 6] = 79;
[PTBR + 7] = "0110";

//code 
[PTBR + 8] = 65;
[PTBR + 9] = "0100";
[PTBR + 10] = 66;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//stack
[PTBR + 16] = 76;
[PTBR + 17] = "0110";
[PTBR + 18] = 77;
[PTBR + 19] = "0110";

[76*512] = [65*512 + 1];

//process table
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 14] = PTBR; 
[PROCESS_TABLE + 16 + 15] = PTLR;

//loading even program

loadi(86 ,69);

PTBR = PAGE_TABLE_BASE + 40;
PTLR = 10;


//library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//heaps
[PTBR + 4] = -1;
[PTBR + 5] = "0110";
[PTBR + 6] = -1;
[PTBR + 7] = "0110";

//code 
[PTBR + 8] = 86;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//stack
[PTBR + 16] = 83;
[PTBR + 17] = "0110";
[PTBR + 18] = 84;
[PTBR + 19] = "0110";

[83*512] = [86*512 + 1];

//process table
[PROCESS_TABLE + 32 + 11] = 85;
[PROCESS_TABLE + 32 + 1] = 2;
[PROCESS_TABLE + 32 + 4] = CREATED;
[PROCESS_TABLE + 32 + 12] = 0;
[PROCESS_TABLE + 32 + 13] = 8*512;
[PROCESS_TABLE + 32 + 14] = PTBR; 
[PROCESS_TABLE + 32 + 15] = PTLR;

alias i R0;
i = 3;
while(i < MAX_PROC_NUM) do 
    [PROCESS_TABLE + i * 16 + 4] = TERMINATED;
    i = i + 1;
endwhile;
return;
